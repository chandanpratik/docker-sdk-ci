#!/bin/bash
# Author: Chandan Kumar

# Import the bootstrap function
source "$(dirname "$0")/bootstrap.sh"

# Define colors
GREEN="\e[32m"
YELLOW="\e[33m"
RED="\e[31m"
BLUE="\e[34m"
CYAN="\e[36m"
RESET="\e[0m"

# List of containers to manage
containers=("ci4-nginx" "ci4-php" "ci4-mariadb" "ci4-phpmyadmin")

# Check if a container exists (running or stopped)
does_container_exist() {
    docker ps -a --filter "name=$1" -q | grep -q .
}

# Check if a container is running
is_container_running() {
    docker ps --filter "name=$1" --filter "status=running" -q | grep -q .
}

# Stop only the listed containers (preserve volumes)
stop_containers() {
    echo -e "üõë ${RED}Stopping selected CI4 Docker containers...${RESET}"
    for container in "${containers[@]}"; do
        if does_container_exist "$container"; then
            docker stop "$container"
        fi
    done
}

# Start or restart only the listed containers
start_or_restart_containers() {
    echo -e "üöÄ ${CYAN}Ensuring CI4 Docker containers are running...${RESET}"
    for container in "${containers[@]}"; do
        if is_container_running "$container"; then
            echo -e "üîÑ Restarting ${GREEN}$container${RESET}..."
            docker restart "$container"
        elif does_container_exist "$container"; then
            echo -e "‚ö° ${YELLOW}$container exists but is stopped. Starting it...${RESET}"
            docker start "$container"
        else
            echo -e "üöÄ ${CYAN}$container not found. Building and starting it...${RESET}"
            docker-compose up -f ./docker/docker-compose.yml -d --build "$container"
        fi
    done
}

# Banner function
show_banner() {
    echo -e "${BLUE}"
    echo " ____ _   _    _    _   _ ____    _    _   _ "
    echo "/ ___| | | |  / \  | \ | |  _ \  / \  | \ | |"
    echo " |   | |_| | / _ \ |  \| | | | |/ _ \ |  \| |"
    echo " |___|  _  |/ ___ \| |\  | |_| / ___ \| |\  |"
    echo "\____|_| |_/_/   \_\_| \_|____/_/   \_\_| \_|"
    echo -e "${BLUE}"

    echo -e "${RED}"
    echo "‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚ïÆ       ‚îå‚îÄ‚îê           ‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚ïÆ‚îÄ‚î¨‚îÄ‚îê"
    echo "‚îÇ  ‚ïÆ ‚îÇ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚î§ ‚îú‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚î¨‚îÄ‚îê ‚îÇ ‚îÄ‚îÄ‚îÄ‚î§  ‚ïÆ ‚îÇ ‚îå‚îÄ‚îò"
    echo "‚îÇ  ‚ïØ ‚îÇ ‚îº ‚îÇ ‚îú‚îÄ‚î§‚îÄ‚îÄ‚îÄ‚î§ ‚îº‚îÄ‚î§ ‚îå‚îÄ‚ïØ ‚îú‚îÄ‚îÄ‚îÄ ‚îÇ  ‚ïØ ‚îÇ ‚îî‚îÄ‚îê"
    echo "‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚î¥‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îò   ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚î¥‚îÄ‚îò"
    echo -e "${BLUE}"
}

# Show banner
show_banner

# Command handling
if [ "$1" == "up" ]; then
#    stop_containers
#    start_or_restart_containers
    docker compose down
    docker/sdk boot
    docker compose -f ./docker/docker-compose.yml up -d --build
    echo -e "${YELLOW}Installing Dependencies...${RESET}"
    docker exec -it ci4-php composer install
    chmod 777 ./writable
HOSTNAME=$(hostname -I | awk '{print $1}')  # Get the first IP of the machine
    echo -e "${YELLOW} Please make sure that the values below are updated in your .env file in order to connect to database."
    echo "          database.default.hostname = mariadb
          database.default.database = ci4db
          database.default.username = ci4user
          database.default.password = ci4password
          database.default.DBDriver = MySQLi
          database.default.port = 3306"
    echo -e "${RESET}"
    echo -e "${GREEN}Application is up and running on http://${HOSTNAME}:8081${RESET}"

elif [ "$1" == "down" ]; then
    echo -e "üõë ${RED}Stopping CI4 Docker containers...${RESET}"
    stop_containers  # Only stops, does not remove volumes

elif [ "$1" == "cli" ]; then
    CONTAINER_NAME="ci4-php"
    echo -e "${CYAN}Welcome to the CodeIgniter 4 CLI inside Docker!${RESET}"
    echo -e "${YELLOW}Type your CI4 command or 'exit' to quit.${RESET}"
    echo -e "${YELLOW}Opening interactive shell in docker/sdk cli${RESET}"
    docker exec -it "$CONTAINER_NAME" sh -c 'export PS1="\033[1;34m CodeIgniter CLI> \033[0m" && exec sh'

elif [ "$1" == "boot" ]; then
    echo -e "${GREEN}‚ö° Bootstrapping the project...${RESET}"
    bootstrap

else
    echo -e "${RED}‚ùå Invalid command!${RESET} Usage:"
    echo -e "${GREEN} docker/sdk up     ‚Üí Restart CI4 containers"
    echo -e "${GREEN} docker/sdk down   ‚Üí Stop CI4 containers"
    echo -e "${GREEN} docker/sdk cli    ‚Üí CLI to CI4 App"
    echo -e "${GREEN} docker/sdk boot   ‚Üí Bootstrap project setup"
fi
